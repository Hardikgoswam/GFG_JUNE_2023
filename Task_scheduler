//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    int leastInterval(int N, int K, vector<char> &tasks) {
        // code here
        map<char,int>mp;
        for(int i = 0 ; i < N ; i++){
            mp[tasks[i]]++;
        }
        int max1=0;
        for(auto i : mp){
            max1 = max(max1,i.second);
        }
        int count = 0;
        for(auto i : mp){
            if(i.second == max1){
                count++;
            }
        }
      
        int x = ( (K+1) * (max1-1)+count);  
        if(x <= N)
          return N;
        else
          return x;
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int N, K;
        cin >> N >> K;

        vector<char> tasks(N);
        for (int i = 0; i < N; i++) cin >> tasks[i];

        Solution obj;
        cout << obj.leastInterval(N, K, tasks) << endl;
    }
    return 0;
}
// } Driver Code Ends